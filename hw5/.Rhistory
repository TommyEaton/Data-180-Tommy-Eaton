library(MASS)
library(dplyr)
Vans93 <- filter(Cars93, Type == "van") %>%
select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
nrow(Vans93)
print(Vans93)
Vans93 <- filter(Cars93, Type == "van") %>%
dplyr::select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
nrow(Vans93)
print(Vans93)
X <- matrix(c(-1,-2,4,2,0,0,-2,2,2,-1,-1,3,3,0,0,2,2,-3,1,1),nrow=5,byrow = T)
print(X)
Vans_Euclidean <- dist(as.matrix(Vans93[, -1]), method = "euclidean")
Vans_Euclidean <- dist(as.matrix(Vans93[, -1]), method = "euclidean")
rownames(Vans_Euclidean) <- colnames(Vans_Euclidean) <- Vans93$Model
Vans_Euclidean <- as.matrix(dist(as.matrix(Vans93[, -1]), method = "euclidean"))
rownames(Vans_Euclidean) <- colnames(Vans_Euclidean) <- Vans93$Model
Vans_Euclidean <- round(Vans_Euclidean, digits = 2)
min_distance <- min(Vans_Euclidean[Vans_Euclidean > 0])
max_distance <- max(Vans_Euclidean)
shortest_distance_vans <- which(Vans_Euclidean == min_distance, arr.ind = TRUE)
largest_distance_vans <- which(Vans_Euclidean == max_distance, arr.ind = TRUE)
shortest_distance_models <- rownames(Vans_Euclidean)[shortest_distance_vans]
largest_distance_models <- rownames(Vans_Euclidean)[largest_distance_vans]
cat("Vans with the shortest distance: ", shortest_distance_models[1], " and ", shortest_distance_models[2], "\n")
cat("Vans with the largest distance: ", largest_distance_models[1], " and ", largest_distance_models[2], "\n")
print(Vans_Euclidean)
print(Vans_Euclidean)
X <- matrix(c(-1,-2,4,2,0,0,-2,2,2,-1,-1,3,3,0,0,2,2,-3,1,1),nrow=5,byrow = T)
print(X)
library(MASS)
library(dplyr)
Vans93 <- filter(Cars93, Type == "van") %>%
dplyr::select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
nrow(Vans93)
print(Vans93)
library(MASS)
library(dplyr)
Vans93 <- filter(Cars93, Type == "vans") %>%
dplyr::select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
nrow(Vans93)
print(Vans93)
Vans93 <- filter(Cars93, Type == "Van") %>%
dplyr::select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
library(MASS)
library(dplyr)
Vans93 <- filter(Cars93, Type == "Van") %>%
dplyr::select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
nrow(Vans93)
print(Vans93)
Vans_Euclidean <- as.matrix(dist(as.matrix(Vans93[, -1]), method = "euclidean"))
colnames(Vans_Euclidean) <- rownames(Vans_Euclidean) <- Vans93$Model
Vans_Euclidean <- round(Vans_Euclidean, digits = 2)
min_distance <- min(Vans_Euclidean[Vans_Euclidean > 0])
max_distance <- max(Vans_Euclidean)
shortest_distance_vans <- which(Vans_Euclidean == min_distance, arr.ind = TRUE)
largest_distance_vans <- which(Vans_Euclidean == max_distance, arr.ind = TRUE)
shortest_distance_models <- rownames(Vans_Euclidean)[shortest_distance_vans]
largest_distance_models <- rownames(Vans_Euclidean)[largest_distance_vans]
cat("Vans with the shortest distance: ", shortest_distance_models[1], " and ", shortest_distance_models[2], "\n")
cat("Vans with the largest distance: ", largest_distance_models[1], " and ", largest_distance_models[2], "\n")
print(Vans_Euclidean)
Vans_Manhattan <- as.matrix(dist(as.matrix(Vans93[, -1]), method = "manhattan"))
colnames(Vans_Manhattan) <- rownames(Vans_Manhattan) <- Vans93$Model
Vans_Manhattan <- round(Vans_Manhattan, digits = 2)
print(Vans_Manhattan)
library(readr)
vertebrate<- read_csv("Users/tommyeaton/Desktop/Data 180 Tommy Eaton/Data-180-Tommy-Eaton/hw5/vertebrate.csv")
library(readr)
vertebrate<- read_csv("tommyeaton/Desktop/Data 180 Tommy Eaton/Data-180-Tommy-Eaton/hw5/vertebrate.csv")
vertebrate<- read_csv("/Desktop/Data 180 Tommy Eaton/Data-180-Tommy-Eaton/hw5/vertebrate.csv")
vertebrate<- read_csv("Desktop/Data 180 Tommy Eaton/Data-180-Tommy-Eaton/hw5/vertebrate.csv")
vertebrate<- read_csv("vertebrate.csv")
library(readr)
vertebrate<- read_csv("vertebrate.csv")
num_rows <- nrow(vertebrate)
print(vertebrate)
cat("Number of rows in the dataframe: ", num_rows, "\n")
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(vertebrate_euclidean) <- colnames(vertebrate_euclidean) <- rownames(vertebrate)[-1]
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
Ver_Euclidean<-as.matrix(dist(vertebrate[,-1]))
rownames(Ver_euclidean) <- colnames(Ver_euclidean) <- rownames(vertebrate)[-1]
X <- matrix(c(-1,-2,4,2,0,0,-2,2,2,-1,-1,3,3,0,0,2,2,-3,1,1),nrow=5,byrow = T)
print(X)
library(MASS)
library(dplyr)
Vans93 <- filter(Cars93, Type == "Van") %>%
dplyr::select(Model, Price, EngineSize, Horsepower, MPG.highway, Length)
nrow(Vans93)
print(Vans93)
Vans_Euclidean <- as.matrix(dist(as.matrix(Vans93[, -1]), method = "euclidean"))
colnames(Vans_Euclidean) <- rownames(Vans_Euclidean) <- Vans93$Model
Vans_Euclidean <- round(Vans_Euclidean, digits = 2)
min_distance <- min(Vans_Euclidean[Vans_Euclidean > 0])
max_distance <- max(Vans_Euclidean)
shortest_distance_vans <- which(Vans_Euclidean == min_distance, arr.ind = TRUE)
largest_distance_vans <- which(Vans_Euclidean == max_distance, arr.ind = TRUE)
shortest_distance_models <- rownames(Vans_Euclidean)[shortest_distance_vans]
largest_distance_models <- rownames(Vans_Euclidean)[largest_distance_vans]
cat("Vans with the shortest distance: ", shortest_distance_models[1], " and ", shortest_distance_models[2], "\n")
cat("Vans with the largest distance: ", largest_distance_models[1], " and ", largest_distance_models[2], "\n")
print(Vans_Euclidean)
Vans_Manhattan <- as.matrix(dist(as.matrix(Vans93[, -1]), method = "manhattan"))
colnames(Vans_Manhattan) <- rownames(Vans_Manhattan) <- Vans93$Model
Vans_Manhattan <- round(Vans_Manhattan, digits = 2)
print(Vans_Manhattan)
D <- matrix(c(0,1,9,2,1.6,8,1,0,3,6,9,4,9,3,0,5,10,3,2,6,5,0,2,7.5,1.6,9,10,2,0,5.5,8,4,3,7.5,5.5,0),nrow=6,byrow = T)
print(D)
library(readr)
vertebrate<- read_csv("vertebrate.csv")
num_rows <- nrow(vertebrate)
print(vertebrate)
cat("Number of rows in the dataframe: ", num_rows, "\n")
vertebrate_euclidean <- as.matrix(dist(vertebrate[,-1]))
rownames(vertebrate_euclidean) <- colnames(vertebrate_euclidean) <- rownames(vertebrate)[-1]
vertebrate_euclidean <- as.matrix(dist(vertebrate[,-1]))
rownames(vertebrate_euclidean) <- colnames(vertebrate_euclidean) <- rownames(vertebrate)[-1]
vertebrate_euclidean <- as.matrix(dist(as.matrix(vertebrate[,-1]), method = "euclidean"))
rownames(vertebrate_euclidean) <- colnames(vertebrate_euclidean) <- rownames(vertebrate)[-1]
vertebrate_euclidean <- as.matrix(dist(vertebrate[,-1]))
rownames(vertebrate_euclidean) <- colnames(vertebrate_euclidean) <- rownames(vertebrate)[-1]
vertebrate_numeric <- vertebrate[, sapply(vertebrate, is.numeric)]
vertebrate_euclidean <- dist(vertebrate_numeric, method = "euclidean")
hclust_complete <- hclust(vertebrate_euclidean, method = "complete")
plot(hclust_complete, main = "Dendrogram (Complete Linkage)")
vertebrate_numeric <- vertebrate[, sapply(vertebrate, is.numeric)]
vertebrate_manhattan <- dist(vertebrate_numeric, method = "manhattan")
hclust_single <- hclust(vertebrate_manhattan, method = "single")
plot(hclust_single, main = "Dendrogram (Single Linkage)")
